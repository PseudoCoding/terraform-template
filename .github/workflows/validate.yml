name: 'Terraform Validation'

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: 'Validate Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.7'

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      run: terraform init -backend=false

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Run tfsec Security Scan
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        soft_fail: true

    - name: Comment PR Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fmtResult = '${{ steps.fmt.outcome }}';
          const validateResult = '${{ steps.validate.outcome }}';
          
          let body = '## 🔍 Terraform Validation Results\n\n';
          
          body += `### Format Check: ${fmtResult === 'success' ? '✅ Pass' : '❌ Fail'}\n`;
          body += `### Validation: ${validateResult === 'success' ? '✅ Pass' : '❌ Fail'}\n`;
          body += `### Security Scan: Completed (check workflow for details)\n\n`;
          
          if (fmtResult === 'failure') {
            body += '⚠️ **Format issues found.** Run `terraform fmt -recursive` to fix.\n\n';
          }
          
          if (validateResult === 'failure') {
            body += '❌ **Validation failed.** Please check the workflow logs for details.\n\n';
          }
          
          if (fmtResult === 'success' && validateResult === 'success') {
            body += '🎉 **All checks passed!** Your Terraform code looks good.\n\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    - name: Fail if format or validation failed
      if: steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure'
      run: exit 1